import numpy as np

# the numbers below have been obtained
# by running the scripts on the QPU

# $ ./unfolding_qubo.py -b qpu -n 5000 -l 0

# low-noise new device
qpu_reads_unreg = np.array([
    [5, 9, 15, 3, 4],  # E = -5458.0
    [1, 12, 12, 5, 3],  # E = -5480.0
    [0, 13, 12, 6, 4],  # E = -5458.0
    [7, 8, 14, 5, 2],  # E = -5477.0
    [4, 11, 11, 7, 2],  # E = -5472.0
    [5, 11, 14, 3, 5],  # E = -5446.0
    [4, 11, 12, 6, 3],  # E = -5479.0
    [0, 14, 10, 7, 2],  # E = -5475.0
    [8, 8, 15, 2, 6],  # E = -5451.0
    [14, 5, 15, 4, 3],  # E = -5462.0
    [12, 8, 12, 8, 0],  # E = -5416.0
    [0, 14, 11, 8, 0],  # E = -5451.0
    [10, 7, 13, 6, 2],  # E = -5475.0
    [11, 6, 15, 3, 4],  # E = -5470.0
    [4, 11, 12, 6, 2],  # E = -5482.0
    [3, 12, 12, 5, 1],  # E = -5456.0
    [8, 8, 14, 5, 3],  # E = -5478.0
    [5, 9, 15, 3, 4],  # E = -5458.0
    [9, 9, 15, 4, 3],  # E = -5424.0
    [3, 11, 12, 6, 2],  # E = -5482.0
])

qpu_reads_reg = np.array([
    [7, 11, 12, 6, 2],  # E = -5383.0
    [6, 11, 12, 5, 1],  # E = -5347.0
    [5, 11, 13, 6, 0],  # E = -5306.0
    [6, 12, 12, 6, 2],  # E = -5368.0
    [5, 10, 11, 7, 2],  # E = -5415.0
    [6, 12, 12, 7, 2],  # E = -5361.0
    [6, 12, 13, 6, 2],  # E = -5317.0
    [5, 10, 11, 5, 3],  # E = -5373.0
    [6, 12, 13, 5, 3],  # E = -5288.0
    [7, 10, 13, 6, 3],  # E = -5326.0
    [5, 11, 12, 7, 0],  # E = -5344.0
    [5, 11, 13, 6, 1],  # E = -5338.0
    [4, 12, 11, 6, 1],  # E = -5337.0
    [7, 11, 12, 8, 2],  # E = -5343.0
    [6, 11, 11, 7, 3],  # E = -5410.0
    [5, 11, 11, 6, 2],  # E = -5406.0
    [4, 9, 12, 6, 2],  # E = -5372.0
    [6, 12, 13, 6, 1],  # E = -5305.0
    [5, 10, 12, 8, 1],  # E = -5357.0
    [6, 10, 13, 7, 0],  # E = -5310.0
])

unf_data = [
    [6,  9, 13,  5,  3],  # true
    [6.67, 9.95, 12.29, 5.36, 2.13],  # IB4
    [6,  9, 13,  5,  3],  # neal
    [0, 0, 0, 0, 0],  # palceholder1
    [0, 0, 0, 0, 0]  # palceholder2
]

unf_data_unc = [
    [0., 0., 0., 0., 0],
    [3.07, 2.61, 2.40, 1.75, 1.35],  # IB4
    [0., 0., 0., 0., 0],  # neal
    [0, 0, 0, 0, 0],  # palceholder1
    [0, 0, 0, 0, 0],  # palceholder2
]

unf_data[3] = np.mean(qpu_reads_unreg, axis=0)
unf_data_unc[3] = np.std(qpu_reads_unreg, axis=0)
unf_data[4] = np.mean(qpu_reads_reg, axis=0)
unf_data_unc[4] = np.std(qpu_reads_reg, axis=0)


unf_data_labels = [
    'True value',
    'D\'Agostini ItrBayes ($N_{itr}$=4)',
    'QUBO (CPU, neal)',
    'QUBO (QPU, $\lambda$=0)',
    'QUBO (QPU, $\lambda$=1)'
]

#################
# with systeamtics

unf_data_syst = [
    [6,  9, 13,  5,  3, 1, 2],  # true
    [0.5,   1.81,  9.26, 14.94,  7.47,  0.,    0.],  # IB4
    [6,  9, 13,  5,  3,  1,  2],  # neal
    [0, 0, 0, 0, 0, 0, 0],  # QPU unreg
    [0, 0, 0, 0, 0, 0, 0],  # QPU reg
]

unf_data_syst_unc = [
    [0., 0., 0., 0., 0., 0., 0.],
    [0.36, 0.7,  1.72, 3.92, 2.95, 0.,   0.],
    [0., 0., 0., 0., 0., 0., 0.],
    [0, 0, 0, 0, 0, 0, 0],  # QPU unreg
    [0, 0, 0, 0, 0, 0, 0],  # QPU reg
]

# low-noise new device
qpu_reads_syst_unreg = np.array([
    [7, 7, 13, 4, 3, 3, 2],  # E = -7175.0
    [10, 2, 15, 1, 2, 3, 5],  # E = -7130.0
    [12, 4, 15, 3, 4, 3, 2],  # E = -7165.0
    [4, 12, 13, 6, 2, 2, 0],  # E = -7173.0
    [13, 2, 14, 2, 1, 7, 2],  # E = -7126.0
    [1, 11, 12, 6, 2, 6, 0],  # E = -7170.0
    [3, 2, 7, 0, 3, 3, 10],  # E = -7105.0
    [14, 4, 15, 5, 3, 1, 1],  # E = -7167.0
    [3, 7, 9, 4, 0, 5, 5],  # E = -7171.0
    [9, 7, 15, 3, 5, 0, 2],  # E = -7169.0
    [11, 7, 15, 4, 6, 0, 1],  # E = -7168.0
    [7, 6, 13, 4, 1, 3, 3],  # E = -7172.0
    [8, 3, 11, 3, 0, 5, 5],  # E = -7164.0
    [6, 7, 11, 3, 3, 1, 5],  # E = -7173.0
    [2, 5, 6, 2, 1, 1, 11],  # E = -7173.0
    [2, 11, 11, 6, 1, 3, 2],  # E = -7177.0
    [5, 11, 11, 5, 3, 0, 3],  # E = -7170.0
    [11, 3, 15, 3, 3, 3, 3],  # E = -7165.0
    [9, 5, 15, 3, 2, 4, 2],  # E = -7162.0
    [3, 13, 11, 8, 1, 3, 0],  # E = -7159.0
])


qpu_reads_syst_reg = np.array([
    [5, 9, 11, 5, 1, 7, 2],  # E = -7056.0
    [7, 10, 10, 6, 2, 1, 3],  # E = -7105.0
    [4, 7, 10, 5, 1, 6, 3],  # E = -7080.0
    [4, 7, 8, 4, 0, 5, 5],  # E = -7098.0
    [4, 7, 7, 3, 0, 7, 6],  # E = -7083.0
    [7, 11, 11, 6, 2, 0, 3],  # E = -7097.0
    [3, 5, 7, 3, 0, 7, 7],  # E = -7097.0
    [2, 7, 6, 3, 0, 4, 8],  # E = -7095.0
    [3, 7, 8, 3, 0, 7, 5],  # E = -7084.0
    [2, 7, 8, 2, 1, 5, 7],  # E = -7062.0
    [3, 6, 7, 1, 3, 5, 7],  # E = -6951.0
    [2, 5, 6, 3, 1, 7, 7],  # E = -7077.0
    [5, 9, 10, 7, 1, 0, 4],  # E = -7098.0
    [1, 3, 3, 0, 0, 4, 15],  # E = -7101.0
    [3, 5, 7, 1, 1, 3, 9],  # E = -7047.0
    [3, 9, 10, 5, 1, 4, 3],  # E = -7089.0
    [0, 3, 6, 0, 2, 5, 11],  # E = -6962.0
    [4, 9, 7, 4, 3, 2, 6],  # E = -7059.0
    [3, 7, 9, 3, 0, 3, 7],  # E = -7085.0
    [5, 10, 9, 5, 2, 5, 3],  # E = -7073.0

])

unf_data_syst[3] = np.mean(qpu_reads_syst_unreg, axis=0)
unf_data_syst_unc[3] = np.std(qpu_reads_syst_unreg, axis=0)
unf_data_syst[4] = np.mean(qpu_reads_syst_reg, axis=0)
unf_data_syst_unc[4] = np.std(qpu_reads_syst_reg, axis=0)
